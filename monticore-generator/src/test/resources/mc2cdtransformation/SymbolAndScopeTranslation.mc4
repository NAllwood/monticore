/* (c) https://github.com/MontiCore/monticore */

package mc2cdtransformation;

grammar SymbolAndScopeTranslation extends mc2cdtransformation.symbolTransl.SymbolRule{

  interface symbol Type = Name;

  interface CDType extends Type = Name;

  CDClass implements CDType = "class" Name;

  symbol SimpleSymbolClass = Name;

  interface scope TypeScope;

  interface CDTypeScope extends TypeScope = Name;

  CDClassScope implements CDTypeScope = "scopeClass" Name;

  scope SimpleScopeClass = Name;


// overwrite
  SymbolClass = Name;
  SymbolAbstractClass = Name;
  SymbolInterface = Name;

// extent bzw. implement
  symbol scope Foo = Name;
  ExtentsSymbolClass extends Foo = Name;

  symbol scope AbstractFoo = Name;
  ExtentsSymbolAbstractClass extends AbstractFoo = Name;

  interface symbol scope InterfaceFoo;
  ImplementsSymbolInterface implements InterfaceFoo = Name;

}
