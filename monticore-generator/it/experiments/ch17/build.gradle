/* (c) https://github.com/MontiCore/monticore */
description = 'Experiments: ch17'

fileTree(grammarDir).each {
  def g = it
  def taskname = file(grammarDir).toURI().relativize(g.toURI()).toString()
  taskname = taskname.substring(0, taskname.lastIndexOf(".")).replaceAll("/",'_')
  task  "generate${taskname}" (type: MCTask) {
    grammar = file g
    outputDir = file outDir
    handcodedPath file("$projectDir/src/main/java")
    modelPath file("$projectDir/$grammarDir")
    def incCheckDir = file(grammarDir).toURI().relativize(g.toURI()).toString()
    incCheckDir = incCheckDir.substring(0,incCheckDir.lastIndexOf('.')).toLowerCase()
    def uptoDate = incCheck(outputDir.toString() +"/$incCheckDir/IncGenGradleCheck.txt")
    outputs.upToDateWhen { uptoDate }
  }
}

generateHAutomaton.dependsOn generateSAutomaton
generateIAutomaton.dependsOn generateIAutomatonComp
