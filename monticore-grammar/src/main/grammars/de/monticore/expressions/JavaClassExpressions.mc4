/* (c) https://github.com/MontiCore/monticore */

package de.monticore.expressions;

/**
 * This grammar defines java specific class expressions like super, this, type cast, etc.
*/

component grammar JavaClassExpressions extends de.monticore.expressions.CommonExpressions {

/**
 * When combining the languages you can decide later if you want to use the complete
 * type system of java (extending MCFullGenericType)
 * or if you want to use a smaller variant
 */

external ExtType;

external ExtReturnType;

external ExtTypeArguments;

PrimaryThisExpression implements Expression <320>
	= "this";

ThisExpression implements Expression <280> =
	Expression "." "this";

ArrayExpression implements Expression <250> =
	Expression "[" indexExpression:Expression "]";

SuperExpression implements Expression <270> =
	Expression "." "super" SuperSuffix;
	
GenericInvocationExpression implements Expression <260> =
	Expression "." PrimaryGenericInvocationExpression;
	
TypeCastExpression implements Expression <230> =
	"(" ExtType ")" Expression;
        
PrimarySuperExpression implements Expression <330>
	= "super";
	
ClassExpression implements Expression <360>
    = ExtReturnType "." "class";
   
PrimaryGenericInvocationExpression implements Expression <370>
    = ExtTypeArguments GenericInvocationSuffix
    ;

GenericInvocationSuffix
    =   ["super"] SuperSuffix
    |   ["this"] Arguments
    |   Name Arguments
    ;
    
SuperSuffix
    =   Arguments
    |   "." ExtTypeArguments? Name Arguments?
    ;
    
InstanceofExpression implements Expression <140>
	= Expression "instanceof" ExtType;
}
